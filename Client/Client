#!/usr/bin/python3

import socket
import sys
from Crypto.PublicKey import RSA
from Requests import register, send, receive

client_key = None
server_key = None

def menu():
    print("******************************************")
    print("*                                        *")
    print("*         S E C U R E   C H A T          *")
    print("*                                        *")
    print("******************************************")
    print("1. Register")
    print("2. Send msg")
    print("3. Get msgs")
    print("4. Exit")
    choice = input("sec_chat$ ")
    return choice
    
def exit_program():
    exit()

def initialize():
    #TODO 
    '''
    1. Check if asymmetric key exists; generate if not | DONE
    2. Check if username exists
    3. Load server RSA key | DONE
    '''
    # check for client RSA key
    try: 
        f = open('client_key.pem', 'rb')
        client_key = RSA.importKey(f.read())
    except FileNotFoundError:
        print('No client RSA key found, generation...')
        f = open
        client_key =  RSA.generate(2048)
        with open('client_key.pem', 'wb+') as f:
            f.write(client_key.exportKey('PEM'))

    # check for server public key
    try:
        f = open('server_pub.pem', 'rb') 
        key = f.read()
        server_key = RSA.importKey(key)
        print("key found")
        print(server_key)
    except FileNotFoundError:
        print('No RSA key found')



# Dictionary mapping user commands to their functions
actions = { '1' : register,
            '2' : send,
            '3' : receive,
            '4' : exit_program }

def main():
    initialize()
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_addr = ('localhost', 10000)
    sock.connect(server_addr)
    print('connected to ip:{} port:{}'.format(*server_addr))
    print('\n')
    try:
        actions[menu()](sock, server_key)

    finally:
        print('closing socket')
        sock.close()

    




if __name__ == '__main__':
    main()
